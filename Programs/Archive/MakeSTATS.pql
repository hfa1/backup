| File name: XXXX
| Path:      XXXX
| Creator:   Greg Neils
| Created:   11/2007
| Retired:
| Called by: XXXX
| Calls:
| Reason:    List of Forms
| Output:    HTML file
| Modified:  XXXX

call SYSPROC.TOOLS.HTMLCODE

call DCCPROCF.SYSTEM.ALLRECS

program
. execute dbms ["attribute monkey99 filename='" + dsn('prefix')+ pack(upper(dbname(0)))+ "_stats.html'"]
end program

retrieval CRWARN PROGRESS
print back noremarks nocommands
string  * 450 STR$1           | for records with keys
string  * 450 STR$2           | for records with keys
string  *  32 KEYINFO
string  * 250 ALL_KEY_INFO | Big string to hold all of the key names
integer *   1 PRESENT |HAS A A RECORD
integer *   1 A_COLOR  | what is the current HTML color (either 1 or 2)
string  *  35 HTML_CLR | what HTML color should the cell be?
integer *   2 EMPTY_CELLS_#   | HOW MANY EMPTY CELLS SHOULD BE COMBINED INTO A COLSPAN = 
string  *  40 VAR_DATE_MAP    | Date map of the key variable
string  *  40 VAR_TIME_MAP    | Time map of the key variable
string  *   2 KEEP_EM_SEP     | Keep different key values separted by a comma space

set A_COLOR  (0)

write '<reclist>'

open monkey99   /write lrecl=600
compute STR$1 ='<' + CHAR(33) + 'DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">'
write (monkey99) STR$1
write (monkey99) '<html>'
write (monkey99) '<head>'
write (monkey99) '<title>'
write (monkey99) 'Results for your search'
write (monkey99) '</title>'
write (monkey99) '</head>'
write (monkey99) '<body>'
write (monkey99) 'Generated on ' [datec(today(0),'mm/dd/yy')]  ' at ' [timec(now(0),'hh:mm')] 'by ' [sglobal('USERA')]  ' and the D.C.C.'
write (monkey99) '  <hr>Database Snapshot'
write (monkey99) '<table  width="100%" border=1 cellpadding="2" cellspacing="0" bgcolor="#FFFFFF">'

write (monkey99) '  <tr><td>' [pack(VARNAMEC(0,1))] '</td>'
for y=1, nrecs(0)
. ifthen (exists(recname(y)) eq 1) 
.   STR$1 = '    <td bgcolor="#FFFCCC"><b><a href="#'+pack(recname(y))+'">' + pack(recname(y))+ '</a></b></td> '
.   write (monkey99) STR$1
. endif
end for
write (monkey99) '  </tr>'



process cases  COUNT = 500 |list = 288 thru 300  |count=1 |
. AUTOSET
c SHOW THE CASEID
. KEYINFO  = pack(varnamec(0,1))
. STR$1     = varget(KEYINFO)
. A_COLOR  = A_COLOR + 1
. HTML_CLR = ''
. EMPTY_CELLS_# = 0 | no empty cells to start off a case
. if (A_COLOR eq 2) A_COLOR=0; HTML_CLR = ' bgcolor="#EAEAEA"'
. STR$1 = '<tr><td' + HTML_CLR +'>'+ STR$1 +'</td>'
. write (monkey99)  STR$1

C SHOW THE RECORDS
. do repeat XREC = <GREC1>
                   <GREC2>
                   <GREC3>
                   <GREC4>
.   STR$1 = ''
.   STR$2 = ''
.   PRESENT = 0
.   ifthen (NKEYS(XREC) eq 0)  | No keys.  Absent or Present
.     process rec XREC
.       PRESENT = 1
.     end rec
.     ifthen (PRESENT eq 1 ) 
.       STR$1 = '<td' + HTML_CLR +'>Y</td>'
.     endif
.   else | >1 key.  group keys
.     process rec XREC
.       STR$2 = ''
.       if (nkeys(XREC) gt 1) STR$1 = STR$1 + '('
.       PRESENT = 1
.       for N = 2,NKEYS(XREC)+1
.         KEEP_EM_SEP = ','
.         if (N = NKEYS(XREC)+1)  KEEP_EM_SEP = ''
.         KEYINFO = pack(keyname(XREC,N))
.         ifthen (vtype(XREC,KEYINFO) eq 3)
.           VAR_DATE_MAP = datemap(XREC,KEYINFO)
.           STR$2 = datec(cdate(varget(KEYINFO),VAR_DATE_MAP),VAR_DATE_MAP) + KEEP_EM_SEP
.           STR$2 = replace(STR$2,' ','/',2,1,0)
.         elseif (vtype(XREC,KEYINFO) eq 4)
.           VAR_TIME_MAP = timemap(XREC,KEYINFO)
.           STR$2 = timec(ctime(varget(KEYINFO),VAR_TIME_MAP),VAR_TIME_MAP) + KEEP_EM_SEP
.         else
.           STR$2 = pack(varget(KEYINFO)) + KEEP_EM_SEP
.         endif
.         STR$1 = STR$1 + STR$2
.       end for
.       ifthen (nkeys(XREC) eq 1)
.         STR$1 = STR$1 + '<br>'
.       else
.         STR$1 = STR$1 + ')<br>'
.       endif
.     end rec
.     ifthen (PRESENT eq 1) 
.       STR$1 = '<td' + HTML_CLR +'> '+ STR$1 + '</td>'
.     endif
.   endif

.   ifthen (PRESENT EQ 1)
.     ifthen (EMPTY_CELLS_# = 0)     | last column had data in it
.       write (monkey99) '  ' STR$1
.     else | got to catch up the column count to get into the right place
.       STR$1 = '  <td' + HTML_CLR +' colspan=' + format(EMPTY_CELLS_#) +'>&nbsp;</td>' + STR$1
.       write (monkey99) STR$1
.     endif
.     EMPTY_CELLS_# = 0  | reset the value because you wrote something out.
.   else  | one more empty column
.     EMPTY_CELLS_# = EMPTY_CELLS_# + 1
.   endif
. END REPEAT
. ifthen (EMPTY_CELLS_# gt 0) | close out the row.  Helps keep the color all the way accross
.   STR$1 = '  <td' + HTML_CLR +' colspan=' + format(EMPTY_CELLS_#) +'>&nbsp;</td>' + STR$1
.   write (monkey99) STR$1
. endif 
. write (monkey99)  '</tr>'
end cases
write (monkey99) '</table>'

write (monkey99) '<table border=1 cellpadding="5">'
for y=1, nrecs(0)
. ifthen (exists(recname(y)) eq 1) 
.   ALL_KEY_INFO  =''
.   STR$1 = '<tr><td><a name="' + pack(recname(y)) + '"></a>'+ format(y) +'- '+ pack(recname(y)) + '</td><td>' + pack(recdoc(y,1)) +'</td>'
.   for N = 2,NKEYS(Y)+1
.     KEEP_EM_SEP = ', '
.     if (N = NKEYS(Y)+1)  KEEP_EM_SEP = ''
.     ALL_KEY_INFO = ALL_KEY_INFO + pack(keyname(Y,N))+ KEEP_EM_SEP
.   end for
.   ifthen (NKEYS(Y) lt 1) 
.     STR$1 =  STR$1 + '<td>Keys: None</td></tr>'
.   else
.     STR$1 =  STR$1 + '<td>Keys: ' + ALL_KEY_INFO + '</td></tr>'
.   endif
.   write (monkey99) STR$1
. endif
end for
write (monkey99) '</table>'

write (monkey99) '</body>'
write (monkey99) '</html>'
close (monkey99) 
c write 'File at ' [dsn('MONKEY99')]
end retrieval