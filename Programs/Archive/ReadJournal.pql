| File name: BACKUPS.MXJOURNAL
| Path:      DCCPROCF
| Creator:   David Merle
| Created:   01/01/2008
| Retired:
| Called by: appdir(0) + DCC\BackUps\07Counts.pql
| Calls:
| Reason:    Check the journal files for deleted, updated, or new records and cases
| Output:    LOG
| Attributes:
| Modified:
call DCCPROCF.SYSTEM.ALLRECS

retrieval noautocase crwarn
c. window clear
. integer * 1 YES NO NEW# JTYPE# OK#
. integer * 4 REC# USER# NEWRECS# UPDRECS# DELRECS# NEWCASE# DELCASE#
              VAR# VARS# FILE# FILES# UPDATE# UPDATES#
. string * 32 JUSER$ DB$ JTYPE$ PREV$ VAR$ CASE$ CHECK$
. string * 100 OUT$ VARL$ VARV$ LINE$ MOD$
. string * 32 array USER@ (1000)
. string * 200 array BEFORE$ (1000)
. date JSTARTDT JENDDT DATE# CHECK_ ('MM/DD/YYYY')
. time JSTARTTM JENDTM START# END# ('HH:MM:SS')
. set NO NEW# USER# NEWRECS# UPDRECS# DELRECS# NEWCASE# DELCASE# (0) YES (1) PREV$ ('') DATE# (missing)
. DB$ = trim(dbname(0))
. CASE$ = trim(varname(0,1))
. UPDATES# = updlevel(0)
. CHECK_ = '01/01/2012'
. OUT$ = '\\192.168.53.246\Data1\DCC\BackupRoutine\Journals\' + DB$ + '.log'
. MOD$ = '\\192.168.53.246\Data1\DCC\BackupRoutine\Journals\Modified\Modified ' + datec(CHECK_,'MM DD YYYY') + '.txt'
|If there is no log, create one
. value labels JTYPE# ( 1)'New record'
                      ( 2)'Updated record'
                      ( 3)'After update'
                      ( 4)'Deleted record'
                      (-1)'Data header'
                      (-2)'Modified schema'
                      (-3)'Unloaded data'
                      (-4)'Journal schema'
                      (-5)'User header'
. for UPDATE# = 0,UPDATES#
.  NEW# = NO
.  process journal from = UPDATE# thru = UPDATE#
                   date = JSTARTDT
                   time = JSTARTTM
                  level = JLEVEL#
                 record = REC#
                   type = JTYPE#
                   user = JUSER$
write REC# 4t [recname(REC#)] 14t JUSER$ 24t JSTARTDT [vallab(JTYPE#)]
c.   if (upper(sbst(JUSER$,1,5)) = 'ADMIN') next journal
|Exceptions here:
cif eq 1,2
.    if (DB$ = 'COSMOS'   and REC# = 40) next journal | INVOICE
.    if (DB$ = 'PARTLIST' and REC# <> 1) next journal | TRACKING
.    if (DB$ = 'PULSE'    and REC# = 45) next journal | NOTES
|
.   JTYPE$ = trim(vallab(JTYPE#))
.   do repeat RECX = <GREC1>
                     <GREC2>
                     <GREC3>
                     <GREC4>
.    journal record is RECX
.     ifthen (JTYPE$ = 'New record')
.      execute subprocedure WRITEJOURNAL
.      NEW# = YES
.     elseif (JTYPE$ = 'Updated record' and NEW# = NO)
.      execute subprocedure WRITEJOURNAL
.     elseif (JTYPE$ = 'Deleted record')
.      execute subprocedure WRITEJOURNAL
.     endif
.    end journal record
.   end repeat
cif end
.  end process journal
. end for

|
. subprocedure WRITEJOURNAL
.   write   JSTARTDT JSTARTTM
          [pad(JUSER$,' ',15,15)]
          [pad(vallab(JTYPE#),' ',15,15)]
          ['(' + pad(format(REC#),' ',3,3) + ')']
          [pad(recname(REC#),' ',10,10)]
          [pad(CASE$,' ',10,10)]
          [pad(varget(varname(0,1)),' ',15,15)]
          [fst(pad(keyname(REC#,2),' ',10,10),'')]
          [fst(pad(varget(keyname(REC#,2)),' ',15,15),'')]
          [fst(pad(keyname(REC#,3),' ',10,10),'')]
          [fst(pad(varget(keyname(REC#,3)),' ',15,15),'')]
          [fst(pad(keyname(REC#,4),' ',10,10),'')]
          [fst(pad(varget(keyname(REC#,4)),' ',15,15),'')]
          [fst(pad(keyname(REC#,5),' ',10,10),'')]
          [fst(pad(varget(keyname(REC#,5)),' ',15,15),'')]
. end subprocedure WRITEJOURNAL
|
end retrieval
