call DCCPROCF.SYSTEM.ALLRECS
retrieval noautocase crwarn
. window clear
. integer * 1 YES NO NEW# JTYPE# OK#
. integer * 2 REC# USER# NEWRECS# UPDRECS# DELRECS# NEWCASE# DELCASE#
              VAR# VARS# FILE# FILES#
. integer * 4 UPDATE# UPDATES#              
. string * 32 JUSER$ DB$ JTYPE$ PREV$ VAR$ CASE$
. string * 100 JOUT$ VARL$ VARV$ FILE$
. string * 32 array USER@ (1000)
. string * 200 array BEFORE$ (1000)
. date JSTARTDT JENDDT DATE# ('MM/DD/YYYY')
. time JSTARTTM JENDTM START# END# ('HH:MM:SS')
. set NO NEW# USER# NEWRECS# UPDRECS# DELRECS# NEWCASE# DELCASE# (0) YES (1) PREV$ ('')
. DB$ = trim(dbname(0))
. CASE$ = trim(varname(0,1))
. UPDATES# = updlevel(0)
. value labels JTYPE# ( 1)'New record'
                      ( 2)'Updated record'
                      ( 3)'After update'
                      ( 4)'Deleted record'
                      (-1)'Data header'
                      (-2)'Modified schema'
                      (-3)'Unloaded data'
                      (-4)'Journal schema'
                      (-5)'User header'
.  for UPDATE# = 0,UPDATES#
. process journal from = UPDATE# thru = UPDATE#
                  date = JSTARTDT enddate = JENDDT
                  time = JSTARTTM endtime = JENDTM
                 level = JLEVEL#
                record = REC#
                  type = JTYPE#
                  user = JUSER$
                master = JMASTER$
c. if (upper(sbst(JUSER$,1,5)) = 'ADMIN') next journal 
.   JTYPE$ = trim(vallab(JTYPE#))
if (JTYPE# = 4) write UPDATE# JUSER$ JTYPE$
.   do repeat RECX = <GREC1>
                     <GREC2>
                     <GREC3>
                     <GREC4>
.    journal record is RECX
.     ifthen (JTYPE$ = 'New record')
.      execute subprocedure WRITEJOURNAL
.      NEW# = YES
.     elseif (JTYPE$ = 'Updated record' and NEW# = NO)
.      execute subprocedure WRITEJOURNAL
.     elseif (JTYPE$ = 'Deleted record')
.      execute subprocedure WRITEJOURNAL
.     endif
.    end journal record
.   end repeat
.  end process journal
. end for

|
. subprocedure WRITEJOURNAL
.   write  JSTARTDT JSTARTTM
          [pad(JUSER$,' ',15,15)]
          [pad(vallab(JTYPE#),' ',15,15)]
          ['(' + pad(format(REC#),' ',3,3) + ')']
          [pad(recname(REC#),' ',10,10)]
          [pad(CASE$,' ',10,10)]
          [pad(varget(varname(0,1)),' ',15,15)]
          [fst(pad(keyname(REC#,2),' ',10,10),'')]
          [fst(pad(varget(keyname(REC#,2)),' ',15,15),'')]
          [fst(pad(keyname(REC#,3),' ',10,10),'')]
          [fst(pad(varget(keyname(REC#,3)),' ',15,15),'')]
          [fst(pad(keyname(REC#,4),' ',10,10),'')]
          [fst(pad(varget(keyname(REC#,4)),' ',15,15),'')]
          [fst(pad(keyname(REC#,5),' ',10,10),'')]
          [fst(pad(varget(keyname(REC#,5)),' ',15,15),'')]
|
end retrieval
